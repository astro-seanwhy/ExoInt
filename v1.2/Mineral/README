The 'Mineral' module of ExoInt_v1.2 is streamlined with the stoicmetric compositional output, along with the given mass/radius to compute mineralogy by calling PerPlex (https://www.perplex.ethz.ch/). 

Copyright @ Haiyang S. Wang and Fabian L. Seidler

History:
"""
The module was co-developed by Fabian L. Seidler and Haiyang S. Wang @ 2021-2022 
It has been further modified and maintained primarily by Haiyang S. Wang @2022-2024

On 24 June 2024, updates have been to run_perplex.py and interior_model.py to solve some errors reported below. 
"""

------------------- Running Mineral --------------------
First, please place your mass and radius data for your case studies in the 'MRfiles' folder, and formate them according to the given example file there. 
[Note: By default, only R will be used as the input and a modelled mass will be generated, which you can compare with your actual data to gauge the modelling accuracy/degeneracy.
In case that you'd like to use M, instead of R, as the input for the calculation, you should change all calls "Planet" to "M_Planet" in all relevant codes, 
including mineral_quick_solver.py, mineral_MC_solver_step1.py, and mineral_MC_solver_step2.py, as well as (within the "Ultilities" folder) __init__.py and beautiful_figures.py. 
But this modification has not been extensively tested. Please report errors if you found any]

There are three steps to run the module: 'quick' (i.e. mean mineralogy; mineral_quick_solver.py) -> 'MCstep1' (MC simulation to assess and illustrate the mineralogy uncertainty; mineral_MC_solver_step1.py) -> 'MCstep2' (Illustrate the mineralogy uncertainty; mineral_MC_solver_step2.py). 
These three steps can be run in sequence (following the order above), manually one by one. You can do so by typing "python3 xxx.py MRfiles/MR_example.csv", for example. 
They can also be run in streamline, with the code 'mineral_OneGo.py'. You can do so similarly, "python3 xxx.py MRfiles/MR_example.csv". Please refer to "Instructions" embedded in 'mineral_OneGo.py' for further details. 
[Please note that the codes, including 'mineral_OneGo.py', can also be run within 'ipython3', in which please type "run xxx.py MRfiles/MR_example.csv")


----output ------
The mineralogy results icluding illustrations are stored in the "mineral_output" folder, in the following formats:
mineralogy_YourCaseName_exoE.txt (data for mean mineralogy)
mineralogy_YourCaseName_exoE.pdf (figure for mean mineralogy)
runpara_R_M_YourCaseName_exoE.txt (key input/output parameters, e.g. R, M, and CRF, for mean mineralogy
mineralogy_YourCaseName_exoE_MC_eval.csv (data for MC mineralogy at 50th, 16th and 84th percentiles)
mineralogy_YourCaseName_exoE_MC_eval.pdf (figure for MC uncertainty assessment)

Please also note that the mineralogy data for each MC simulation are stored in the subdirectory "MC_files" and further in the individual folders of YourCaseName.

---IMPORTANT ------ 
The module, as provided, has only be tested on a Linux system; and PerPlex version 6.8.9 (https://perplex.ethz.ch/Perple_X_Sources_691/) was used, the binary and data files of which were compiled on Linux as well and provided under the Utilities/PerPlex folder. 
If you would like to run the module on a different system (e.g., MAC or Windows) or adopt a different version of Perple_X, please follow their instructions, https://www.perplex.ethz.ch/ , to obtain the relevant files to be compiled on your system. We unfortunately cannot offer direct help on compiling Perplex.  


---Solutions to Error Reports ---
The following errors have been reported in some cases while running the Mineral codes:
"pexpect.exceptions.EOF: End Of File (EOF)"
"path character limit" related errors.

The root-cause of the errors has now been identified due to a mis-use of 'pexpect' in the previous run_perplex.py file. The errors have been eliminated with the recently updated run_perplex.py and interior_model.py. 

Please report in case you found any further issue.

---Licence ------
This program is distributed as free software, under the terms of the GNU Affero General Public License as published by the Free Software Foundation, in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. 
You should have received a copy of the GNU Affero General Public License along with this program.  If not, see <https://www.gnu.org/licenses/>.

You are also particularly welcome to make pull requests and contribute to the further development of the free software. Please get in touch, if you're interested.

------------------- Citations ----------------------
Relevant references for this module: 
Wang, H. S., Quanz, S. P., Yong, D., Liu, F., Seidler, F., Acuna, L., Mojzsis, S. J. 2022. Detailed chemical compositions of planet hosting stars: II. Exploration of the interiors of terrestrial-type exoplanets. MNRAS 513:5829-5846. https://doi.org/10.1093/mnras/stac1119 
Wang, H. S., Lineweaver, C. H., Quanz, S. P., Mojzsis, S. J., Ireland, T. R., Sossi, P. A., Seidler, F., and Morel, T. 2022. A model Earth-sized planet in the habitable zone of Î± Centauri A/B. ApJ 927:134. https://doi.org/10.3847/1538-4357/ac4e8c

Contact:
Questions, comments, and suggestions may be raised in the 'Issues' tab, or otherwise directly sent to haiwang@ethz.ch or haiyang.wang@sund.ku.dk (for requests, in particular).
